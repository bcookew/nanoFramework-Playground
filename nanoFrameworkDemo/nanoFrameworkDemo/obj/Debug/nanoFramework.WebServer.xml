<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nanoFramework.WebServer</name>
    </assembly>
    <members>
        <member name="T:nanoFramework.WebServer.Authentication">
            <summary>
            The authentication to be used by the server.
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.Authentication.AuthenticationType">
            <summary>
            The type of authentication.
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.Authentication.Credentials">
            <summary>
            The network credential user and password.
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.Authentication.ApiKey">
            <summary>
            The API Key to use for authentication.
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.Authentication.#ctor(System.Net.NetworkCredential)">
            <summary>
            Creates an autentication class from a credential.
            </summary>
            <param name="credential">The credentials.</param>
        </member>
        <member name="M:nanoFramework.WebServer.Authentication.#ctor(System.String)">
            <summary>
            Creates an authentication from a key.
            </summary>
            <param name="apiKey">The key.</param>
        </member>
        <member name="M:nanoFramework.WebServer.Authentication.#ctor">
            <summary>
            Creates an empty authenticate.
            </summary>
        </member>
        <member name="T:nanoFramework.WebServer.AuthenticationAttribute">
            <summary>
            Authentication attribute for classes and method
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.AuthenticationAttribute.AuthenticationMethod">
            <summary>
            The authentication method, examples:
            - Basic:user password
            - Basic
            - ApiKey:OneApiKey
            - ApiKey
            - None
            In case of Basic and ApiKey alone, the default one passed at server properties ones will be used
            The Basic authentication is a classical http basic authentication and the couple user password have to be separated with a space, the password can contain spaces but not the user name. Basic and the user name has to be separated with a :
            ApiKey and the current apikey has to be separated with :
            The current ApiKey can contain only characters that are allow in http headers
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.AuthenticationAttribute.#ctor(System.String)">
            <summary>
            The constructor for the Authentication attribute
            </summary>
            <param name="auth"></param>
        </member>
        <member name="T:nanoFramework.WebServer.AuthenticationType">
            <summary>
            The type of authentication to use.
            </summary>
        </member>
        <member name="F:nanoFramework.WebServer.AuthenticationType.None">
            <summary>
            No authentication is needed.
            </summary>
        </member>
        <member name="F:nanoFramework.WebServer.AuthenticationType.Basic">
            <summary>
            Basic authentication with user and password.
            </summary>
        </member>
        <member name="F:nanoFramework.WebServer.AuthenticationType.ApiKey">
            <summary>
            Using an ApiKey.
            </summary>
        </member>
        <member name="T:nanoFramework.WebServer.CallbackRoutes">
            <summary>
            Callback function for the various routes
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.CallbackRoutes.Callback">
            <summary>
            The method to call for a specific route
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.CallbackRoutes.Route">
            <summary>
            The route ex: api/gpio
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.CallbackRoutes.CaseSensitive">
            <summary>
            Is the root case sensitive?
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.CallbackRoutes.Method">
            <summary>
            The http method ex GET or POST, leave string.Empty for any
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.CallbackRoutes.Authentication">
            <summary>
            the authentication details
            </summary>
        </member>
        <member name="T:nanoFramework.WebServer.CaseSensitiveAttribute">
            <summary>
            If the route is case sensitive or not
            </summary>
        </member>
        <member name="T:nanoFramework.WebServer.HttpProtocol">
            <summary>
            Http protocol used
            </summary>
        </member>
        <member name="F:nanoFramework.WebServer.HttpProtocol.Http">
            <summary>
            Http protocol
            </summary>
        </member>
        <member name="F:nanoFramework.WebServer.HttpProtocol.Https">
            <summary>
            Https protocol
            </summary>
        </member>
        <member name="T:nanoFramework.WebServer.WebServerEventArgs">
            <summary>
            Web server event argument class
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.WebServerEventArgs.#ctor(System.Net.HttpListenerContext)">
            <summary>
            Constructor for the event arguments
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.WebServerEventArgs.Context">
            <summary>
            The response class
            </summary>
        </member>
        <member name="T:nanoFramework.WebServer.Header">
            <summary>
            Header class
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.Header.Name">
            <summary>
            Name of the header
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.Header.Value">
            <summary>
            Value of the header
            </summary>
        </member>
        <member name="T:nanoFramework.WebServer.MethodAttribute">
            <summary>
            The HTTP Method.
            </summary>
            <remarks>
            No validation is performed if the HTTP method is a valid one.
            For details on how to use, see: https://github.com/nanoframework/nanoFramework.WebServer#usage
            </remarks>
        </member>
        <member name="P:nanoFramework.WebServer.MethodAttribute.Method">
            <summary>
            Gets or sets the method.
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.MethodAttribute.#ctor(System.String)">
            <summary>
            Creates a method attribute.
            </summary>
            <param name="method">The method.</param>
        </member>
        <member name="T:nanoFramework.WebServer.RouteAttribute">
            <summary>
            Route custom attribute.
            </summary>
            <remarks>
            For example: test/any.
            For details on how to use, see: https://github.com/nanoframework/nanoFramework.WebServer#usage
            </remarks>
        </member>
        <member name="P:nanoFramework.WebServer.RouteAttribute.Route">
            <summary>
            Gets or sets the route.
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.RouteAttribute.#ctor(System.String)">
            <summary>
            A route attribute.
            </summary>
            <param name="route">The complete route like 'route/second/third'.</param>
        </member>
        <member name="T:nanoFramework.WebServer.UrlParameter">
            <summary>
            Represent an URL parameter Name=Value
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.UrlParameter.Name">
            <summary>
            Name of the parameter
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.UrlParameter.Value">
            <summary>
            Valeu of the parameter
            </summary>
        </member>
        <member name="T:nanoFramework.WebServer.WebServer">
            <summary>
            This class instantiates a web server.
            </summary>
        </member>
        <member name="F:nanoFramework.WebServer.WebServer.ParamSeparator">
            <summary>
            URL parameter separation character
            </summary>
        </member>
        <member name="F:nanoFramework.WebServer.WebServer.ParamStart">
            <summary>
            URL parameter start character
            </summary>
        </member>
        <member name="F:nanoFramework.WebServer.WebServer.ParamEqual">
            <summary>
            URL parameter equal character
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.WebServer.Port">
            <summary>
            Gets or sets the port the server listens on.
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.WebServer.Protocol">
            <summary>
            The type of Http protocol used, http or https
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.WebServer.HttpsCert">
            <summary>
            The Https certificate to use
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.WebServer.SslProtocols">
            <summary>
            SSL protocols
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.WebServer.Credential">
            <summary>
            Network credential used for default user:password couple during basic authentication
            </summary>
        </member>
        <member name="P:nanoFramework.WebServer.WebServer.ApiKey">
            <summary>
            Default APiKey to be used for authentication when no key is specified in the attribute
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.DecodeParam(System.String)">
            <summary>
            Get an array of parameters from a URL
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.#ctor(System.Int32,nanoFramework.WebServer.HttpProtocol)">
            <summary>
            Instantiates a new web server.
            </summary>
            <param name="port">Port number to listen on.</param>
            <param name="protocol"><see cref="T:nanoFramework.WebServer.HttpProtocol"/> version to use with web server.</param>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.#ctor(System.Int32,nanoFramework.WebServer.HttpProtocol,System.Type[])">
            <summary>
            Instantiates a new web server.
            </summary>
            <param name="port">Port number to listen on.</param>
            <param name="protocol"><see cref="T:nanoFramework.WebServer.HttpProtocol"/> version to use with web server.</param>
            <param name="controllers">Controllers to use with this web server.</param>
        </member>
        <member name="T:nanoFramework.WebServer.WebServer.GetRequestHandler">
            <summary>
            Delegate for the CommandReceived event.
            </summary>
        </member>
        <member name="E:nanoFramework.WebServer.WebServer.CommandReceived">
            <summary>
            CommandReceived event is triggered when a valid command (plus parameters) is received.
            Valid commands are defined in the AllowedCommands property.
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.Start">
            <summary>
            Start the multi threaded server.
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.Restart">
            <summary>
            Restart the server.
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.Stop">
            <summary>
            Stop the multi threaded server.
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.OutPutStream(System.Net.HttpListenerResponse,System.String)">
            <summary>
            Output a stream
            </summary>
            <param name="response">the socket stream</param>
            <param name="strResponse">the stream to output</param>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.OutputHttpCode(System.Net.HttpListenerResponse,System.Net.HttpStatusCode)">
            <summary>
            Output an HTTP Code and close the connection
            </summary>
            <param name="response">the socket stream</param>
            <param name="code">the http code</param>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.SendFileOverHTTP(System.Net.HttpListenerResponse,System.String,System.Byte[],System.String)">
            <summary>
            Send file content over HTTP response.
            </summary>
            <param name="response"><see cref="T:System.Net.HttpListenerResponse"/> to send the content over.</param>
            <param name="fileName">Name of the file to send over <see cref="T:System.Net.HttpListenerResponse"/>.</param>
            <param name="content">Content of the file to send.</param>
            <param name="contentType">The type of file, if empty string, then will use auto detection.</param>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.InvokeRoute(nanoFramework.WebServer.CallbackRoutes,System.Net.HttpListenerContext)">
            <summary>
            Method which invokes route. Can be overriden to inject custom logic.
            </summary>
            <param name="route">Current rounte to invoke. Resolved based on parameters.</param>
            <param name="context">Context of current request.</param>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.ListInterfaces">
            <summary>
            List all IP address, useful for debug only
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.GetContentTypeFromFileName(System.String)">
            <summary>
            Get the MIME-type for a file name.
            </summary>
            <param name="fileExt">File extension to get content type for.</param>
            <returns>The MIME-type for the file name.</returns>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.Dispose">
            <summary>
            Dispose of any resources.
            </summary>
        </member>
        <member name="M:nanoFramework.WebServer.WebServer.Dispose(System.Boolean)">
            <summary>
            Release resources.
            </summary>
            <param name="disposing">Dispose of resources?</param>
        </member>
    </members>
</doc>
